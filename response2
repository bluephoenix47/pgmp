Review E points out that the contribution over existing tools is
unclear.  We will fix this in the final version.  In essence, the
new API differs from earlier work in that it permits arbitrary
meta-programs to make use of profiling information, whereas previous
applications of profiling in meta programming have been one-off,
i.e., implemented by and for a single meta-program.  This is the
sense in which our API is general-purpose, not ad-hoc, and is
unrelated to the fact that we were able to leverage existing profiling
mechanisms in both Chez Scheme and Racket to make our implementations
in those systems relatively straightforward.  The API is also
language-independent in that it can be incorporated into any
meta-programming language that permits conditional rewrites and
supported by any implementation that permits source profiling or
is augmented to do so.

Review E also points out that performance is not being evaluated
at all.  We will incorporate a discussion of this in the final paper
per the first several paragraphs of our earlier response.
